import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:scoped_model/scoped_model.dart';
import 'package:flutter/material.dart';

class User extends Model {
  FirebaseAuth _auth = FirebaseAuth.instance;

  FirebaseUser firebaseUser;
  Map<String, dynamic> userData = Map();

  bool isLoading = false;

  void signUp({@required Map<String, dynamic> userData,@required String pass,
      @required VoidCallback onSucces,@required VoidCallback onFail}) {

        isLoading = true;
        notifyListeners();

        _auth.createUserWithEmailAndPassword(
          email: userData["email"], 
          password: pass
        ).then((user) async{

          firebaseUser = user;

          await _saveUserData(userData);

          onSucces();
          isLoading = false;
          notifyListeners();

        }).catchError((e){

          onFail();
          isLoading = false;
          notifyListeners();

        });

      }

  void signIn() async {
    isLoading = true;
    notifyListeners(); // refaz tudo que estiver dentro do scopedModelDescendant

    await Future.delayed(Duration(seconds: 2));

    isLoading = false;
    notifyListeners();
  }

  void recoverPass() {
    
  }

  Future<Null> _saveUserData(Map<String, dynamic> userData){
    this.userData = userData;
    Firestore.instance.collection("users")
  }
}
